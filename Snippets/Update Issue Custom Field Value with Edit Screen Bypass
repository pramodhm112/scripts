// Get the key of the current issue
def issueKey = issue.key
logger.info("Issue Key: ${issueKey}")

/*
https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-issues/#api-group-issues

Use this link for comprehensive information on Jira REST API endpoints 
to extend and customize your scripts for managing issues, comments, fields, and more.
*/

// Prepare and execute the API request to update the issue's custom field
def updateResponse = put("/rest/api/3/issue/${issueKey}")
    .queryString("overrideScreenSecurity", true) // Use boolean value directly
    .header('Content-Type', 'application/json')
    .body([
        fields: [
            "customfield_10005": [ // Replace 'customfield_10005' with the correct ID of your custom field
                value: "Normal"
            ]
        ]
    ])
    .asString()

// Check if the update was successful and log the result
if (updateResponse.status == 204) {
    logger.info("Updated the Issue")
} else {
    logger.error("Failed to update issue: ${updateResponse.status} - ${updateResponse.body}")
}
