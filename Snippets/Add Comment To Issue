// Get the key of the current issue
def issueKey = issue.key

// Define the comment text to be added
def commentText1 = """
@user please add the requestor to the communication exclusion list
https://docs.google.com/spreadsheets/d/1eefSoGzAJWH7tV9hxCjiaJ1Esn0vRBKybrpJTk/edit#gid=0
"""

// Retrieve existing comments for the issue
def commentsResult = get("/rest/api/2/issue/${issueKey}/comment")
    .header('Content-Type', 'application/json')
    .asObject(Map)

// Extract the comments from the response
def comments = commentsResult.body.comments

// Check if the comment already exists
def commentAlreadyExists = comments.any { comment ->
    comment.body.contains(commentText1.trim())
}

// Add the comment if it doesn't already exist
if (!commentAlreadyExists) {
    def addCommentResult = post("/rest/api/2/issue/${issueKey}/comment")
        .header('Content-Type', 'application/json')
        .body(["body": commentText1.trim()])
        .asObject(Map)

    println("Comment added. Response: ${addCommentResult}")
} else {
    println("Duplicate comment found, not adding a new one.")
}
